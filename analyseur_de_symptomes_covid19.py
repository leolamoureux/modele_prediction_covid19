# -*- coding: utf-8 -*-
"""Analyseur de symptomes COVID19.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/19xil9c1rabRtIRM6AhJ6lEcV0zuSNbDI
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sbn
import sklearn as sk
from sklearn.model_selection import train_test_split

df = pd.read_csv("/content/Covid Dataset.csv")

df.head()

df.isnull().sum()#on verifie si il manque des données

df.replace({'Yes':0,'No':1},inplace=True)#on remplace les valeur catégorique par des numériques

target=df['COVID-19']
df.drop(['COVID-19'],axis=1,inplace=True)

X=df
y=target

seed=50

X_train,X_test,y_train,y_test = train_test_split(X,y, test_size = 0.4,
                                                 random_state = seed, stratify=y )

from sklearn.linear_model import LogisticRegression
from sklearn.neighbors import KNeighborsClassifier
from sklearn import svm
from sklearn.tree import DecisionTreeClassifier
from sklearn.metrics import accuracy_score

#fonction de précision
def precision_modele(valeur,valeur_pred):
  prec=accuracy_score(valeur,valeur_pred)
  print(f'précision du modèle : {prec*100} %')

lr=LogisticRegression(random_state=seed)

lr.fit(X_train,y_train)
precision_modele(y_test,lr.predict(X_test))

knc=KNeighborsClassifier()

knc.fit(X_train,y_train)
precision_modele(y_test,knc.predict(X_test))

svm=svm.SVC()

svm.fit(X_train,y_train)
precision_modele(y_test,svm.predict(X_test))

dt=DecisionTreeClassifier(random_state=seed)

dt.fit(X_train,y_train)
precision_modele(y_test,dt.predict(X_test))

X_val = X
y_val = y

#on choisis par exemple la regression logistique
LR=LogisticRegression()
LR.fit(X_val,y_val)

#enregistrer le modele
import pickle 
pickle.dump(LR,open('model_covid_symptoms.pkl','wb'))